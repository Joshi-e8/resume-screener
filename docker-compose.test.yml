version: '3.8'

services:
  mongodb-test:
    image: mongo:7.0
    container_name: resume_screener_mongo_test
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: resume_screener_test
    ports:
      - "27018:27017"
    volumes:
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - test_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: resume_screener_backend_test
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb-test:27017/resume_screener_test?authSource=admin
      - MONGODB_DB_NAME=resume_screener_test
      - GROQ_API_KEY=test_key
      - SECRET_KEY=test_secret_key
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./backend:/app
      - ./backend/tests:/app/tests
    depends_on:
      mongodb-test:
        condition: service_healthy
    networks:
      - test_network
    command: ["python", "-m", "pytest", "tests/", "-v", "--cov=app"]

  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: resume_screener_frontend_test
    environment:
      - NODE_ENV=test
      - NEXT_PUBLIC_API_URL=http://backend-test:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - test_network
    command: ["npm", "run", "test:ci"]

networks:
  test_network:
    driver: bridge
